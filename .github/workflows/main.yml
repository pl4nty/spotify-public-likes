name: Build, test and deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build_and_test:
    runs-on: windows-latest
    name: Build and test
    steps:
    - uses: actions/checkout@v2

    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 12
        cache: npm
      
    - name: Install dependencies
      run: npm install --production=false

    - name: Build
      run: npm run build
      
    - name: Setup CosmosDB emulator
      uses: southpolesteve/cosmos-emulator-github-action@v1

    - name: Run tests
      run: npm test
      env:
        SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
        SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
        COSMOSDB_ENDPOINT: https://localhost:8081
        COSMOSDB_KEY: C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==
        COSMOSDB_DB_ID: spotify
        COSMOSDB_CONTAINER_ID: users
        FUNCTION_URL: ${{ secrets.FUNCTION_URL }}
        FUNCTION_KEY: ${{ secrets.FUNCTION_KEY }}

    - name: Remove dev dependencies
      run: npm prune --production
      
    - name: Archive build without sourcemaps
      uses: actions/upload-artifact@v2
      with:
        name: dist-without-src
        path: |
          dist/*
          !dist/**/*.map
          node_modules
    
    - name: Archive coverage summary
      uses: actions/upload-artifact@v2
      with:
        name: coverage-summary
        path: coverage/coverage-summary.json
    
  deploy:
    needs: build_and_test
    runs-on: windows-latest
    name: Deploy to Azure  
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
      
    - name: Parse coverage data
      run: echo "PERCENT=$((Get-Content coverage-summary\coverage-summary.json | Out-String | ConvertFrom-Json).total.lines.pct)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Update coverage badge
      uses: schneegans/dynamic-badges-action@v1.0.0
      with:
        auth: ${{ secrets.BADGE_TOKEN }}
        gistID: 342ee9e95e5604afaa2ee223f30f4dbd
        filename: coverage.json
        label: coverage
        message: ${{ format('{0}%', env.PERCENT) }}
        color: success
        isError: ${{ env.PERCENT < 70 }}
        namedLogo: jest
        logoColor: white
      
    - name: Deploy to Azure Function
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ secrets.AZURE_FUNCTIONAPP_NAME }}
        package: dist-without-src
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
